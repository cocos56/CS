启动mysql方法1：
cmd--->mysqld.exe(启动mysql)--->(登录)mysql -u root -p(默认密码回车)--->show databases;--->create database zhang;--->use zhang;

启动mysql方法2：
C:\Windows\System32--->找到cmd-->右键以管理员身份登录--->mysqld.exe(启动mysql)--->(登录)mysql -u root -p(默认密码回车)--->show databases;--->create database zhang;--->use zhang;

建表的基本要求：5大约束
1 主键约束：唯一表示一行，不可重复(主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据)-->primary key-->通常以ID为主键 ID的增长策略。
2 外键(foreign key):一个表中的字段和另外一个表中的字段如果是一一对应的话，那么这一字段的列就是外键(外键用于关联两个表)
3 非空：设计一列，不能为空的话。 
4 唯一性：不能够出现重复的
5 check：在Oracle中有用，在mysql中不能用。如（‘男’，‘女’）

varchar(15)(varchar可变字符，节省空间)-->相当于char[15]，提高检索效率,不够15个字符，其他以空格填充.

create database zhang;

use zhang;
show tables;

(表和类一一对应)
create table student(
id int primary key,
name varchar(15) not null,
sex varchar(8),
grade int not null
);

insert into student values(1,'zhang','man',2);
insert into student values(2,'lisi','girl',2);
insert into student values(3,'wangwu','man',1);
insert into student values(4,'zhaoliu','girl',1);
insert into student values(5,'zhaobensan','girl',1);
insert into student values(6,'liudehua','man',3);
insert into student values(7,'fanbingbing','girl',2);
insert into student values(8,'mayun','man',1);
insert into student values(9,'getian','girl',3);
insert into student values(10,'kobe','man',3);

select * from student;

update student set sex='man' where id=4;

create table course(
id int primary key,
name varchar(10) not null,
desb varchar(30)
);

insert into course values(1,'math','very hard');
insert into course values(2,'english','very very hard');
insert into course values(3,'chinese','very easy');

select * from course;

create table score(
s_id int,
c_id int,
sc_num int not null,
foreign key (s_id) references student(id),//行级约束
foreign key (c_id) references course(id),
primary key(s_id,c_id)//复合主键
//当一个字段无法确定唯一性的时候，需要其他字段来一起形成唯一性。就是说用来组成唯一性的字段如果有多个就是联合主键
);

insert into score values(1,1,80);
insert into score values(1,2,90);
insert into score values(1,3,85);
insert into score values(2,1,83);
insert into score values(2,2,88);
insert into score values(2,3,84);
insert into score values(3,1,75);
insert into score values(3,2,70);
insert into score values(3,3,80);
insert into score values(4,1,76);
insert into score values(4,2,79);
insert into score values(4,3,82);
insert into score values(5,1,88);
insert into score values(5,2,89);
insert into score values(5,3,90);
insert into score values(6,1,73);
insert into score values(6,2,80);
insert into score values(6,3,81);
insert into score values(7,1,73);
insert into score values(7,2,98);
insert into score values(7,3,79);
insert into score values(8,1,75);
insert into score values(8,2,60);
insert into score values(8,3,70);
insert into score values(9,1,65);
insert into score values(9,2,82);
insert into score values(9,3,77);
insert into score values(10,1,92);
insert into score values(10,2,95);
insert into score values(10,3,96);

select * from score;

show tables;

desc student;
desc score;
desc course;//desc-->describe

select * from student;

where加限定条件：
select * from student where grade=2;
select * from student where id>5;
select * from student where id>5 and id<7;
select * from student where id>6 or id<3;
select * from student where id between 5 and 7;

select * from student where id between 5 and 7 and grade=2;
//like模糊查询
select * from student where name like '%z%';//%代表零个或多个字符  SQL LIKE 子句中使用百分号(%)字符来表示任意字符，类似于UNIX或正则表达式中的星号 (*)。
select * from student where name like '%z';
select * from student where name like 'z%';
select * from student where name like '_a%';//第二个字母是a的字符串  _表示任意一个字符



